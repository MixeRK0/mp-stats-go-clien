/*
mpstats

MPStats API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SimilarByDate 
type SimilarByDate struct {
	// Дата
	Data string `json:"data"`
	// Число позиций
	Items int32 `json:"items"`
	// Среднее число комментариев на товар
	Comments float32 `json:"comments"`
	// Средний рейтинг
	Rating float32 `json:"rating"`
	// Число товаров, числящихся в наличии
	Balance int32 `json:"balance"`
	// Произведение остатка на цену продажи
	BalancePrice int32 `json:"balance_price"`
	// Средняя цена товара у бренда (все товары, среднее арифметическое)
	AvgPrice float32 `json:"avg_price"`
	// Средняя цена состоявшейся продажи (деление выручки на число продаж)
	AvgSalePrice float32 `json:"avg_sale_price"`
	// Число продаж единиц товара
	Sales int32 `json:"sales"`
	// Выручка за сутки
	Revenue float32 `json:"revenue"`
}

// NewSimilarByDate instantiates a new SimilarByDate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimilarByDate(data string, items int32, comments float32, rating float32, balance int32, balancePrice int32, avgPrice float32, avgSalePrice float32, sales int32, revenue float32) *SimilarByDate {
	this := SimilarByDate{}
	this.Data = data
	this.Items = items
	this.Comments = comments
	this.Rating = rating
	this.Balance = balance
	this.BalancePrice = balancePrice
	this.AvgPrice = avgPrice
	this.AvgSalePrice = avgSalePrice
	this.Sales = sales
	this.Revenue = revenue
	return &this
}

// NewSimilarByDateWithDefaults instantiates a new SimilarByDate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimilarByDateWithDefaults() *SimilarByDate {
	this := SimilarByDate{}
	return &this
}

// GetData returns the Data field value
func (o *SimilarByDate) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *SimilarByDate) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *SimilarByDate) SetData(v string) {
	o.Data = v
}

// GetItems returns the Items field value
func (o *SimilarByDate) GetItems() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *SimilarByDate) GetItemsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Items, true
}

// SetItems sets field value
func (o *SimilarByDate) SetItems(v int32) {
	o.Items = v
}

// GetComments returns the Comments field value
func (o *SimilarByDate) GetComments() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *SimilarByDate) GetCommentsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comments, true
}

// SetComments sets field value
func (o *SimilarByDate) SetComments(v float32) {
	o.Comments = v
}

// GetRating returns the Rating field value
func (o *SimilarByDate) GetRating() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Rating
}

// GetRatingOk returns a tuple with the Rating field value
// and a boolean to check if the value has been set.
func (o *SimilarByDate) GetRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rating, true
}

// SetRating sets field value
func (o *SimilarByDate) SetRating(v float32) {
	o.Rating = v
}

// GetBalance returns the Balance field value
func (o *SimilarByDate) GetBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *SimilarByDate) GetBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *SimilarByDate) SetBalance(v int32) {
	o.Balance = v
}

// GetBalancePrice returns the BalancePrice field value
func (o *SimilarByDate) GetBalancePrice() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BalancePrice
}

// GetBalancePriceOk returns a tuple with the BalancePrice field value
// and a boolean to check if the value has been set.
func (o *SimilarByDate) GetBalancePriceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BalancePrice, true
}

// SetBalancePrice sets field value
func (o *SimilarByDate) SetBalancePrice(v int32) {
	o.BalancePrice = v
}

// GetAvgPrice returns the AvgPrice field value
func (o *SimilarByDate) GetAvgPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AvgPrice
}

// GetAvgPriceOk returns a tuple with the AvgPrice field value
// and a boolean to check if the value has been set.
func (o *SimilarByDate) GetAvgPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvgPrice, true
}

// SetAvgPrice sets field value
func (o *SimilarByDate) SetAvgPrice(v float32) {
	o.AvgPrice = v
}

// GetAvgSalePrice returns the AvgSalePrice field value
func (o *SimilarByDate) GetAvgSalePrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AvgSalePrice
}

// GetAvgSalePriceOk returns a tuple with the AvgSalePrice field value
// and a boolean to check if the value has been set.
func (o *SimilarByDate) GetAvgSalePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvgSalePrice, true
}

// SetAvgSalePrice sets field value
func (o *SimilarByDate) SetAvgSalePrice(v float32) {
	o.AvgSalePrice = v
}

// GetSales returns the Sales field value
func (o *SimilarByDate) GetSales() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Sales
}

// GetSalesOk returns a tuple with the Sales field value
// and a boolean to check if the value has been set.
func (o *SimilarByDate) GetSalesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sales, true
}

// SetSales sets field value
func (o *SimilarByDate) SetSales(v int32) {
	o.Sales = v
}

// GetRevenue returns the Revenue field value
func (o *SimilarByDate) GetRevenue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value
// and a boolean to check if the value has been set.
func (o *SimilarByDate) GetRevenueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revenue, true
}

// SetRevenue sets field value
func (o *SimilarByDate) SetRevenue(v float32) {
	o.Revenue = v
}

func (o SimilarByDate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["comments"] = o.Comments
	}
	if true {
		toSerialize["rating"] = o.Rating
	}
	if true {
		toSerialize["balance"] = o.Balance
	}
	if true {
		toSerialize["balance_price"] = o.BalancePrice
	}
	if true {
		toSerialize["avg_price"] = o.AvgPrice
	}
	if true {
		toSerialize["avg_sale_price"] = o.AvgSalePrice
	}
	if true {
		toSerialize["sales"] = o.Sales
	}
	if true {
		toSerialize["revenue"] = o.Revenue
	}
	return json.Marshal(toSerialize)
}

type NullableSimilarByDate struct {
	value *SimilarByDate
	isSet bool
}

func (v NullableSimilarByDate) Get() *SimilarByDate {
	return v.value
}

func (v *NullableSimilarByDate) Set(val *SimilarByDate) {
	v.value = val
	v.isSet = true
}

func (v NullableSimilarByDate) IsSet() bool {
	return v.isSet
}

func (v *NullableSimilarByDate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimilarByDate(val *SimilarByDate) *NullableSimilarByDate {
	return &NullableSimilarByDate{value: val, isSet: true}
}

func (v NullableSimilarByDate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimilarByDate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


