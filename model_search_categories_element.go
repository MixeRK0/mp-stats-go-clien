/*
mpstats

MPStats API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SearchCategoriesElement struct for SearchCategoriesElement
type SearchCategoriesElement struct {
	// Наименование категории
	Name string `json:"name"`
	// Число товаров
	Items int32 `json:"items"`
	// Число товаров с продажами
	ItemsWithSells int32 `json:"items_with_sells"`
	// Процент товаров с продажами
	ItemsWithSellsPercent int32 `json:"items_with_sells_percent"`
	// Число продавцов
	Sellers int32 `json:"sellers"`
	// Число продавцов с продажами
	SellersWithSells int32 `json:"sellers_with_sells"`
	// Процент продавцов с продажами
	SellersWithSellsPercent int32 `json:"sellers_with_sells_percent"`
	// Среднее количество продаж на товар
	SalesPerItemsAverage float32 `json:"sales_per_items_average"`
	// Среднее количество продаж на товар с продажами
	SalesPerItemsWithSellsAverage float32 `json:"sales_per_items_with_sells_average"`
	// Число продаж
	Sales int32 `json:"sales"`
	// Выручка
	Revenue int32 `json:"revenue"`
	// Сердняя выручка на товар
	RevenuePerItemsAverage float32 `json:"revenue_per_items_average"`
	// Сердняя выручка на товар с продажами
	RevenuePerItemsWithSellsAverage float32 `json:"revenue_per_items_with_sells_average"`
	// Сердняя цена товара
	AvgPrice float32 `json:"avg_price"`
	// Среднее количество комментариев
	Comments float32 `json:"comments"`
	// Средний рейтинг товаров
	Rating float32 `json:"rating"`
}

// NewSearchCategoriesElement instantiates a new SearchCategoriesElement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCategoriesElement(name string, items int32, itemsWithSells int32, itemsWithSellsPercent int32, sellers int32, sellersWithSells int32, sellersWithSellsPercent int32, salesPerItemsAverage float32, salesPerItemsWithSellsAverage float32, sales int32, revenue int32, revenuePerItemsAverage float32, revenuePerItemsWithSellsAverage float32, avgPrice float32, comments float32, rating float32) *SearchCategoriesElement {
	this := SearchCategoriesElement{}
	this.Name = name
	this.Items = items
	this.ItemsWithSells = itemsWithSells
	this.ItemsWithSellsPercent = itemsWithSellsPercent
	this.Sellers = sellers
	this.SellersWithSells = sellersWithSells
	this.SellersWithSellsPercent = sellersWithSellsPercent
	this.SalesPerItemsAverage = salesPerItemsAverage
	this.SalesPerItemsWithSellsAverage = salesPerItemsWithSellsAverage
	this.Sales = sales
	this.Revenue = revenue
	this.RevenuePerItemsAverage = revenuePerItemsAverage
	this.RevenuePerItemsWithSellsAverage = revenuePerItemsWithSellsAverage
	this.AvgPrice = avgPrice
	this.Comments = comments
	this.Rating = rating
	return &this
}

// NewSearchCategoriesElementWithDefaults instantiates a new SearchCategoriesElement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCategoriesElementWithDefaults() *SearchCategoriesElement {
	this := SearchCategoriesElement{}
	return &this
}

// GetName returns the Name field value
func (o *SearchCategoriesElement) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SearchCategoriesElement) SetName(v string) {
	o.Name = v
}

// GetItems returns the Items field value
func (o *SearchCategoriesElement) GetItems() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetItemsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Items, true
}

// SetItems sets field value
func (o *SearchCategoriesElement) SetItems(v int32) {
	o.Items = v
}

// GetItemsWithSells returns the ItemsWithSells field value
func (o *SearchCategoriesElement) GetItemsWithSells() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ItemsWithSells
}

// GetItemsWithSellsOk returns a tuple with the ItemsWithSells field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetItemsWithSellsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemsWithSells, true
}

// SetItemsWithSells sets field value
func (o *SearchCategoriesElement) SetItemsWithSells(v int32) {
	o.ItemsWithSells = v
}

// GetItemsWithSellsPercent returns the ItemsWithSellsPercent field value
func (o *SearchCategoriesElement) GetItemsWithSellsPercent() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ItemsWithSellsPercent
}

// GetItemsWithSellsPercentOk returns a tuple with the ItemsWithSellsPercent field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetItemsWithSellsPercentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemsWithSellsPercent, true
}

// SetItemsWithSellsPercent sets field value
func (o *SearchCategoriesElement) SetItemsWithSellsPercent(v int32) {
	o.ItemsWithSellsPercent = v
}

// GetSellers returns the Sellers field value
func (o *SearchCategoriesElement) GetSellers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Sellers
}

// GetSellersOk returns a tuple with the Sellers field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetSellersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sellers, true
}

// SetSellers sets field value
func (o *SearchCategoriesElement) SetSellers(v int32) {
	o.Sellers = v
}

// GetSellersWithSells returns the SellersWithSells field value
func (o *SearchCategoriesElement) GetSellersWithSells() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SellersWithSells
}

// GetSellersWithSellsOk returns a tuple with the SellersWithSells field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetSellersWithSellsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SellersWithSells, true
}

// SetSellersWithSells sets field value
func (o *SearchCategoriesElement) SetSellersWithSells(v int32) {
	o.SellersWithSells = v
}

// GetSellersWithSellsPercent returns the SellersWithSellsPercent field value
func (o *SearchCategoriesElement) GetSellersWithSellsPercent() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SellersWithSellsPercent
}

// GetSellersWithSellsPercentOk returns a tuple with the SellersWithSellsPercent field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetSellersWithSellsPercentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SellersWithSellsPercent, true
}

// SetSellersWithSellsPercent sets field value
func (o *SearchCategoriesElement) SetSellersWithSellsPercent(v int32) {
	o.SellersWithSellsPercent = v
}

// GetSalesPerItemsAverage returns the SalesPerItemsAverage field value
func (o *SearchCategoriesElement) GetSalesPerItemsAverage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SalesPerItemsAverage
}

// GetSalesPerItemsAverageOk returns a tuple with the SalesPerItemsAverage field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetSalesPerItemsAverageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesPerItemsAverage, true
}

// SetSalesPerItemsAverage sets field value
func (o *SearchCategoriesElement) SetSalesPerItemsAverage(v float32) {
	o.SalesPerItemsAverage = v
}

// GetSalesPerItemsWithSellsAverage returns the SalesPerItemsWithSellsAverage field value
func (o *SearchCategoriesElement) GetSalesPerItemsWithSellsAverage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SalesPerItemsWithSellsAverage
}

// GetSalesPerItemsWithSellsAverageOk returns a tuple with the SalesPerItemsWithSellsAverage field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetSalesPerItemsWithSellsAverageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesPerItemsWithSellsAverage, true
}

// SetSalesPerItemsWithSellsAverage sets field value
func (o *SearchCategoriesElement) SetSalesPerItemsWithSellsAverage(v float32) {
	o.SalesPerItemsWithSellsAverage = v
}

// GetSales returns the Sales field value
func (o *SearchCategoriesElement) GetSales() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Sales
}

// GetSalesOk returns a tuple with the Sales field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetSalesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sales, true
}

// SetSales sets field value
func (o *SearchCategoriesElement) SetSales(v int32) {
	o.Sales = v
}

// GetRevenue returns the Revenue field value
func (o *SearchCategoriesElement) GetRevenue() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetRevenueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revenue, true
}

// SetRevenue sets field value
func (o *SearchCategoriesElement) SetRevenue(v int32) {
	o.Revenue = v
}

// GetRevenuePerItemsAverage returns the RevenuePerItemsAverage field value
func (o *SearchCategoriesElement) GetRevenuePerItemsAverage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RevenuePerItemsAverage
}

// GetRevenuePerItemsAverageOk returns a tuple with the RevenuePerItemsAverage field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetRevenuePerItemsAverageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevenuePerItemsAverage, true
}

// SetRevenuePerItemsAverage sets field value
func (o *SearchCategoriesElement) SetRevenuePerItemsAverage(v float32) {
	o.RevenuePerItemsAverage = v
}

// GetRevenuePerItemsWithSellsAverage returns the RevenuePerItemsWithSellsAverage field value
func (o *SearchCategoriesElement) GetRevenuePerItemsWithSellsAverage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RevenuePerItemsWithSellsAverage
}

// GetRevenuePerItemsWithSellsAverageOk returns a tuple with the RevenuePerItemsWithSellsAverage field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetRevenuePerItemsWithSellsAverageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevenuePerItemsWithSellsAverage, true
}

// SetRevenuePerItemsWithSellsAverage sets field value
func (o *SearchCategoriesElement) SetRevenuePerItemsWithSellsAverage(v float32) {
	o.RevenuePerItemsWithSellsAverage = v
}

// GetAvgPrice returns the AvgPrice field value
func (o *SearchCategoriesElement) GetAvgPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AvgPrice
}

// GetAvgPriceOk returns a tuple with the AvgPrice field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetAvgPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvgPrice, true
}

// SetAvgPrice sets field value
func (o *SearchCategoriesElement) SetAvgPrice(v float32) {
	o.AvgPrice = v
}

// GetComments returns the Comments field value
func (o *SearchCategoriesElement) GetComments() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetCommentsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comments, true
}

// SetComments sets field value
func (o *SearchCategoriesElement) SetComments(v float32) {
	o.Comments = v
}

// GetRating returns the Rating field value
func (o *SearchCategoriesElement) GetRating() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Rating
}

// GetRatingOk returns a tuple with the Rating field value
// and a boolean to check if the value has been set.
func (o *SearchCategoriesElement) GetRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rating, true
}

// SetRating sets field value
func (o *SearchCategoriesElement) SetRating(v float32) {
	o.Rating = v
}

func (o SearchCategoriesElement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["items_with_sells"] = o.ItemsWithSells
	}
	if true {
		toSerialize["items_with_sells_percent"] = o.ItemsWithSellsPercent
	}
	if true {
		toSerialize["sellers"] = o.Sellers
	}
	if true {
		toSerialize["sellers_with_sells"] = o.SellersWithSells
	}
	if true {
		toSerialize["sellers_with_sells_percent"] = o.SellersWithSellsPercent
	}
	if true {
		toSerialize["sales_per_items_average"] = o.SalesPerItemsAverage
	}
	if true {
		toSerialize["sales_per_items_with_sells_average"] = o.SalesPerItemsWithSellsAverage
	}
	if true {
		toSerialize["sales"] = o.Sales
	}
	if true {
		toSerialize["revenue"] = o.Revenue
	}
	if true {
		toSerialize["revenue_per_items_average"] = o.RevenuePerItemsAverage
	}
	if true {
		toSerialize["revenue_per_items_with_sells_average"] = o.RevenuePerItemsWithSellsAverage
	}
	if true {
		toSerialize["avg_price"] = o.AvgPrice
	}
	if true {
		toSerialize["comments"] = o.Comments
	}
	if true {
		toSerialize["rating"] = o.Rating
	}
	return json.Marshal(toSerialize)
}

type NullableSearchCategoriesElement struct {
	value *SearchCategoriesElement
	isSet bool
}

func (v NullableSearchCategoriesElement) Get() *SearchCategoriesElement {
	return v.value
}

func (v *NullableSearchCategoriesElement) Set(val *SearchCategoriesElement) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCategoriesElement) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCategoriesElement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCategoriesElement(val *SearchCategoriesElement) *NullableSearchCategoriesElement {
	return &NullableSearchCategoriesElement{value: val, isSet: true}
}

func (v NullableSearchCategoriesElement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCategoriesElement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


