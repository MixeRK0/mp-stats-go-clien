/*
mpstats

MPStats API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CategorySubject struct for CategorySubject
type CategorySubject struct {
	// Количество продаж
	Sales int64 `json:"sales"`
	// Выручка
	Revenue int64 `json:"revenue"`
	// Количество товаров
	Items int64 `json:"items"`
	// Количество товаров с продажами
	ItemsWithSells int64 `json:"items_with_sells"`
	// Процент товаров с продажами
	ItemsWithSellsPercent float32 `json:"items_with_sells_percent"`
	// Число продавцов
	Sellers int64 `json:"sellers"`
	// Число продавцов с продажами
	SellersWithSells int64 `json:"sellers_with_sells"`
	// Число брендов
	Brands int64 `json:"brands"`
	// Число брендов с продажами
	BrandsWithSells int64 `json:"brands_with_sells"`
	// Процент продавцов с продажами
	SellersWithSellsPercent float32 `json:"sellers_with_sells_percent"`
	// Среднее количество продаж
	SalesPerItemsAverage float32 `json:"sales_per_items_average"`
	// Среднее количество продаж у товаров с продажами
	SalesPerItemsWithSellsAverage float32 `json:"sales_per_items_with_sells_average"`
	// Средняя выручка за товар
	RevenuePerItemsAverage float32 `json:"revenue_per_items_average"`
	// Средняя выручка за товар с продажами
	RevenuePerItemsWithSellsAverage float32 `json:"revenue_per_items_with_sells_average"`
	// Средняя цена
	AvgPrice float32 `json:"avg_price"`
	// Рейтинг
	Rating float32 `json:"rating"`
	// Количество комментариев
	Comments float32 `json:"comments"`
	// Остаток
	Balance int64 `json:"balance"`
	// Товаров с движением
	LiveItems int64 `json:"live_items"`
	// Потенциал
	RevenuePotential int64 `json:"revenue_potential"`
	// Упущенная выручка
	LostProfit int64 `json:"lost_profit"`
	// Процент упущенной выручки
	LostProfitPercent float32 `json:"lost_profit_percent"`
	// Граф
	Graph []int32 `json:"graph"`
	// Идентификатор
	Id int32 `json:"id"`
	// Наименование
	Name string `json:"name"`
	// Комиссия FBO
	CommissionFbo float32 `json:"commission_fbo"`
	// Комиссия FBS
	CommissionFbs float32 `json:"commission_fbs"`
	// Базовая логистика
	BasicLogistics float32 `json:"basic_logistics"`
	// Цена хранения
	StoragePrice float32 `json:"storage_price"`
	// Цена приемки
	AcceptancePrice float32 `json:"acceptance_price"`
	DeliveryByVolume string `json:"delivery_by_volume"`
	// Средний процент выкупа
	Purchase float32 `json:"purchase"`
	// Средний процент выкупа с учетом возврат
	PurchaseAfterReturn float32 `json:"purchase_after_return"`
}

// NewCategorySubject instantiates a new CategorySubject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategorySubject(sales int64, revenue int64, items int64, itemsWithSells int64, itemsWithSellsPercent float32, sellers int64, sellersWithSells int64, brands int64, brandsWithSells int64, sellersWithSellsPercent float32, salesPerItemsAverage float32, salesPerItemsWithSellsAverage float32, revenuePerItemsAverage float32, revenuePerItemsWithSellsAverage float32, avgPrice float32, rating float32, comments float32, balance int64, liveItems int64, revenuePotential int64, lostProfit int64, lostProfitPercent float32, graph []int32, id int32, name string, commissionFbo float32, commissionFbs float32, basicLogistics float32, storagePrice float32, acceptancePrice float32, deliveryByVolume string, purchase float32, purchaseAfterReturn float32) *CategorySubject {
	this := CategorySubject{}
	this.Sales = sales
	this.Revenue = revenue
	this.Items = items
	this.ItemsWithSells = itemsWithSells
	this.ItemsWithSellsPercent = itemsWithSellsPercent
	this.Sellers = sellers
	this.SellersWithSells = sellersWithSells
	this.Brands = brands
	this.BrandsWithSells = brandsWithSells
	this.SellersWithSellsPercent = sellersWithSellsPercent
	this.SalesPerItemsAverage = salesPerItemsAverage
	this.SalesPerItemsWithSellsAverage = salesPerItemsWithSellsAverage
	this.RevenuePerItemsAverage = revenuePerItemsAverage
	this.RevenuePerItemsWithSellsAverage = revenuePerItemsWithSellsAverage
	this.AvgPrice = avgPrice
	this.Rating = rating
	this.Comments = comments
	this.Balance = balance
	this.LiveItems = liveItems
	this.RevenuePotential = revenuePotential
	this.LostProfit = lostProfit
	this.LostProfitPercent = lostProfitPercent
	this.Graph = graph
	this.Id = id
	this.Name = name
	this.CommissionFbo = commissionFbo
	this.CommissionFbs = commissionFbs
	this.BasicLogistics = basicLogistics
	this.StoragePrice = storagePrice
	this.AcceptancePrice = acceptancePrice
	this.DeliveryByVolume = deliveryByVolume
	this.Purchase = purchase
	this.PurchaseAfterReturn = purchaseAfterReturn
	return &this
}

// NewCategorySubjectWithDefaults instantiates a new CategorySubject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategorySubjectWithDefaults() *CategorySubject {
	this := CategorySubject{}
	return &this
}

// GetSales returns the Sales field value
func (o *CategorySubject) GetSales() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Sales
}

// GetSalesOk returns a tuple with the Sales field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetSalesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sales, true
}

// SetSales sets field value
func (o *CategorySubject) SetSales(v int64) {
	o.Sales = v
}

// GetRevenue returns the Revenue field value
func (o *CategorySubject) GetRevenue() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetRevenueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revenue, true
}

// SetRevenue sets field value
func (o *CategorySubject) SetRevenue(v int64) {
	o.Revenue = v
}

// GetItems returns the Items field value
func (o *CategorySubject) GetItems() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetItemsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Items, true
}

// SetItems sets field value
func (o *CategorySubject) SetItems(v int64) {
	o.Items = v
}

// GetItemsWithSells returns the ItemsWithSells field value
func (o *CategorySubject) GetItemsWithSells() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ItemsWithSells
}

// GetItemsWithSellsOk returns a tuple with the ItemsWithSells field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetItemsWithSellsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemsWithSells, true
}

// SetItemsWithSells sets field value
func (o *CategorySubject) SetItemsWithSells(v int64) {
	o.ItemsWithSells = v
}

// GetItemsWithSellsPercent returns the ItemsWithSellsPercent field value
func (o *CategorySubject) GetItemsWithSellsPercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ItemsWithSellsPercent
}

// GetItemsWithSellsPercentOk returns a tuple with the ItemsWithSellsPercent field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetItemsWithSellsPercentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemsWithSellsPercent, true
}

// SetItemsWithSellsPercent sets field value
func (o *CategorySubject) SetItemsWithSellsPercent(v float32) {
	o.ItemsWithSellsPercent = v
}

// GetSellers returns the Sellers field value
func (o *CategorySubject) GetSellers() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Sellers
}

// GetSellersOk returns a tuple with the Sellers field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetSellersOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sellers, true
}

// SetSellers sets field value
func (o *CategorySubject) SetSellers(v int64) {
	o.Sellers = v
}

// GetSellersWithSells returns the SellersWithSells field value
func (o *CategorySubject) GetSellersWithSells() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SellersWithSells
}

// GetSellersWithSellsOk returns a tuple with the SellersWithSells field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetSellersWithSellsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SellersWithSells, true
}

// SetSellersWithSells sets field value
func (o *CategorySubject) SetSellersWithSells(v int64) {
	o.SellersWithSells = v
}

// GetBrands returns the Brands field value
func (o *CategorySubject) GetBrands() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Brands
}

// GetBrandsOk returns a tuple with the Brands field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetBrandsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Brands, true
}

// SetBrands sets field value
func (o *CategorySubject) SetBrands(v int64) {
	o.Brands = v
}

// GetBrandsWithSells returns the BrandsWithSells field value
func (o *CategorySubject) GetBrandsWithSells() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BrandsWithSells
}

// GetBrandsWithSellsOk returns a tuple with the BrandsWithSells field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetBrandsWithSellsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BrandsWithSells, true
}

// SetBrandsWithSells sets field value
func (o *CategorySubject) SetBrandsWithSells(v int64) {
	o.BrandsWithSells = v
}

// GetSellersWithSellsPercent returns the SellersWithSellsPercent field value
func (o *CategorySubject) GetSellersWithSellsPercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SellersWithSellsPercent
}

// GetSellersWithSellsPercentOk returns a tuple with the SellersWithSellsPercent field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetSellersWithSellsPercentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SellersWithSellsPercent, true
}

// SetSellersWithSellsPercent sets field value
func (o *CategorySubject) SetSellersWithSellsPercent(v float32) {
	o.SellersWithSellsPercent = v
}

// GetSalesPerItemsAverage returns the SalesPerItemsAverage field value
func (o *CategorySubject) GetSalesPerItemsAverage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SalesPerItemsAverage
}

// GetSalesPerItemsAverageOk returns a tuple with the SalesPerItemsAverage field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetSalesPerItemsAverageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesPerItemsAverage, true
}

// SetSalesPerItemsAverage sets field value
func (o *CategorySubject) SetSalesPerItemsAverage(v float32) {
	o.SalesPerItemsAverage = v
}

// GetSalesPerItemsWithSellsAverage returns the SalesPerItemsWithSellsAverage field value
func (o *CategorySubject) GetSalesPerItemsWithSellsAverage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SalesPerItemsWithSellsAverage
}

// GetSalesPerItemsWithSellsAverageOk returns a tuple with the SalesPerItemsWithSellsAverage field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetSalesPerItemsWithSellsAverageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesPerItemsWithSellsAverage, true
}

// SetSalesPerItemsWithSellsAverage sets field value
func (o *CategorySubject) SetSalesPerItemsWithSellsAverage(v float32) {
	o.SalesPerItemsWithSellsAverage = v
}

// GetRevenuePerItemsAverage returns the RevenuePerItemsAverage field value
func (o *CategorySubject) GetRevenuePerItemsAverage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RevenuePerItemsAverage
}

// GetRevenuePerItemsAverageOk returns a tuple with the RevenuePerItemsAverage field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetRevenuePerItemsAverageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevenuePerItemsAverage, true
}

// SetRevenuePerItemsAverage sets field value
func (o *CategorySubject) SetRevenuePerItemsAverage(v float32) {
	o.RevenuePerItemsAverage = v
}

// GetRevenuePerItemsWithSellsAverage returns the RevenuePerItemsWithSellsAverage field value
func (o *CategorySubject) GetRevenuePerItemsWithSellsAverage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RevenuePerItemsWithSellsAverage
}

// GetRevenuePerItemsWithSellsAverageOk returns a tuple with the RevenuePerItemsWithSellsAverage field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetRevenuePerItemsWithSellsAverageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevenuePerItemsWithSellsAverage, true
}

// SetRevenuePerItemsWithSellsAverage sets field value
func (o *CategorySubject) SetRevenuePerItemsWithSellsAverage(v float32) {
	o.RevenuePerItemsWithSellsAverage = v
}

// GetAvgPrice returns the AvgPrice field value
func (o *CategorySubject) GetAvgPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AvgPrice
}

// GetAvgPriceOk returns a tuple with the AvgPrice field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetAvgPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvgPrice, true
}

// SetAvgPrice sets field value
func (o *CategorySubject) SetAvgPrice(v float32) {
	o.AvgPrice = v
}

// GetRating returns the Rating field value
func (o *CategorySubject) GetRating() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Rating
}

// GetRatingOk returns a tuple with the Rating field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rating, true
}

// SetRating sets field value
func (o *CategorySubject) SetRating(v float32) {
	o.Rating = v
}

// GetComments returns the Comments field value
func (o *CategorySubject) GetComments() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetCommentsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comments, true
}

// SetComments sets field value
func (o *CategorySubject) SetComments(v float32) {
	o.Comments = v
}

// GetBalance returns the Balance field value
func (o *CategorySubject) GetBalance() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetBalanceOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *CategorySubject) SetBalance(v int64) {
	o.Balance = v
}

// GetLiveItems returns the LiveItems field value
func (o *CategorySubject) GetLiveItems() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LiveItems
}

// GetLiveItemsOk returns a tuple with the LiveItems field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetLiveItemsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LiveItems, true
}

// SetLiveItems sets field value
func (o *CategorySubject) SetLiveItems(v int64) {
	o.LiveItems = v
}

// GetRevenuePotential returns the RevenuePotential field value
func (o *CategorySubject) GetRevenuePotential() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RevenuePotential
}

// GetRevenuePotentialOk returns a tuple with the RevenuePotential field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetRevenuePotentialOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevenuePotential, true
}

// SetRevenuePotential sets field value
func (o *CategorySubject) SetRevenuePotential(v int64) {
	o.RevenuePotential = v
}

// GetLostProfit returns the LostProfit field value
func (o *CategorySubject) GetLostProfit() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LostProfit
}

// GetLostProfitOk returns a tuple with the LostProfit field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetLostProfitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LostProfit, true
}

// SetLostProfit sets field value
func (o *CategorySubject) SetLostProfit(v int64) {
	o.LostProfit = v
}

// GetLostProfitPercent returns the LostProfitPercent field value
func (o *CategorySubject) GetLostProfitPercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LostProfitPercent
}

// GetLostProfitPercentOk returns a tuple with the LostProfitPercent field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetLostProfitPercentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LostProfitPercent, true
}

// SetLostProfitPercent sets field value
func (o *CategorySubject) SetLostProfitPercent(v float32) {
	o.LostProfitPercent = v
}

// GetGraph returns the Graph field value
func (o *CategorySubject) GetGraph() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Graph
}

// GetGraphOk returns a tuple with the Graph field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetGraphOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Graph, true
}

// SetGraph sets field value
func (o *CategorySubject) SetGraph(v []int32) {
	o.Graph = v
}

// GetId returns the Id field value
func (o *CategorySubject) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CategorySubject) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CategorySubject) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CategorySubject) SetName(v string) {
	o.Name = v
}

// GetCommissionFbo returns the CommissionFbo field value
func (o *CategorySubject) GetCommissionFbo() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CommissionFbo
}

// GetCommissionFboOk returns a tuple with the CommissionFbo field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetCommissionFboOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommissionFbo, true
}

// SetCommissionFbo sets field value
func (o *CategorySubject) SetCommissionFbo(v float32) {
	o.CommissionFbo = v
}

// GetCommissionFbs returns the CommissionFbs field value
func (o *CategorySubject) GetCommissionFbs() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CommissionFbs
}

// GetCommissionFbsOk returns a tuple with the CommissionFbs field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetCommissionFbsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommissionFbs, true
}

// SetCommissionFbs sets field value
func (o *CategorySubject) SetCommissionFbs(v float32) {
	o.CommissionFbs = v
}

// GetBasicLogistics returns the BasicLogistics field value
func (o *CategorySubject) GetBasicLogistics() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BasicLogistics
}

// GetBasicLogisticsOk returns a tuple with the BasicLogistics field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetBasicLogisticsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BasicLogistics, true
}

// SetBasicLogistics sets field value
func (o *CategorySubject) SetBasicLogistics(v float32) {
	o.BasicLogistics = v
}

// GetStoragePrice returns the StoragePrice field value
func (o *CategorySubject) GetStoragePrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.StoragePrice
}

// GetStoragePriceOk returns a tuple with the StoragePrice field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetStoragePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoragePrice, true
}

// SetStoragePrice sets field value
func (o *CategorySubject) SetStoragePrice(v float32) {
	o.StoragePrice = v
}

// GetAcceptancePrice returns the AcceptancePrice field value
func (o *CategorySubject) GetAcceptancePrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AcceptancePrice
}

// GetAcceptancePriceOk returns a tuple with the AcceptancePrice field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetAcceptancePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AcceptancePrice, true
}

// SetAcceptancePrice sets field value
func (o *CategorySubject) SetAcceptancePrice(v float32) {
	o.AcceptancePrice = v
}

// GetDeliveryByVolume returns the DeliveryByVolume field value
func (o *CategorySubject) GetDeliveryByVolume() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeliveryByVolume
}

// GetDeliveryByVolumeOk returns a tuple with the DeliveryByVolume field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetDeliveryByVolumeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliveryByVolume, true
}

// SetDeliveryByVolume sets field value
func (o *CategorySubject) SetDeliveryByVolume(v string) {
	o.DeliveryByVolume = v
}

// GetPurchase returns the Purchase field value
func (o *CategorySubject) GetPurchase() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Purchase
}

// GetPurchaseOk returns a tuple with the Purchase field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetPurchaseOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Purchase, true
}

// SetPurchase sets field value
func (o *CategorySubject) SetPurchase(v float32) {
	o.Purchase = v
}

// GetPurchaseAfterReturn returns the PurchaseAfterReturn field value
func (o *CategorySubject) GetPurchaseAfterReturn() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PurchaseAfterReturn
}

// GetPurchaseAfterReturnOk returns a tuple with the PurchaseAfterReturn field value
// and a boolean to check if the value has been set.
func (o *CategorySubject) GetPurchaseAfterReturnOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PurchaseAfterReturn, true
}

// SetPurchaseAfterReturn sets field value
func (o *CategorySubject) SetPurchaseAfterReturn(v float32) {
	o.PurchaseAfterReturn = v
}

func (o CategorySubject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sales"] = o.Sales
	}
	if true {
		toSerialize["revenue"] = o.Revenue
	}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["items_with_sells"] = o.ItemsWithSells
	}
	if true {
		toSerialize["items_with_sells_percent"] = o.ItemsWithSellsPercent
	}
	if true {
		toSerialize["sellers"] = o.Sellers
	}
	if true {
		toSerialize["sellers_with_sells"] = o.SellersWithSells
	}
	if true {
		toSerialize["brands"] = o.Brands
	}
	if true {
		toSerialize["brands_with_sells"] = o.BrandsWithSells
	}
	if true {
		toSerialize["sellers_with_sells_percent"] = o.SellersWithSellsPercent
	}
	if true {
		toSerialize["sales_per_items_average"] = o.SalesPerItemsAverage
	}
	if true {
		toSerialize["sales_per_items_with_sells_average"] = o.SalesPerItemsWithSellsAverage
	}
	if true {
		toSerialize["revenue_per_items_average"] = o.RevenuePerItemsAverage
	}
	if true {
		toSerialize["revenue_per_items_with_sells_average"] = o.RevenuePerItemsWithSellsAverage
	}
	if true {
		toSerialize["avg_price"] = o.AvgPrice
	}
	if true {
		toSerialize["rating"] = o.Rating
	}
	if true {
		toSerialize["comments"] = o.Comments
	}
	if true {
		toSerialize["balance"] = o.Balance
	}
	if true {
		toSerialize["live_items"] = o.LiveItems
	}
	if true {
		toSerialize["revenue_potential"] = o.RevenuePotential
	}
	if true {
		toSerialize["lost_profit"] = o.LostProfit
	}
	if true {
		toSerialize["lost_profit_percent"] = o.LostProfitPercent
	}
	if true {
		toSerialize["graph"] = o.Graph
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["commission_fbo"] = o.CommissionFbo
	}
	if true {
		toSerialize["commission_fbs"] = o.CommissionFbs
	}
	if true {
		toSerialize["basic_logistics"] = o.BasicLogistics
	}
	if true {
		toSerialize["storage_price"] = o.StoragePrice
	}
	if true {
		toSerialize["acceptance_price"] = o.AcceptancePrice
	}
	if true {
		toSerialize["delivery_by_volume"] = o.DeliveryByVolume
	}
	if true {
		toSerialize["purchase"] = o.Purchase
	}
	if true {
		toSerialize["purchase_after_return"] = o.PurchaseAfterReturn
	}
	return json.Marshal(toSerialize)
}

type NullableCategorySubject struct {
	value *CategorySubject
	isSet bool
}

func (v NullableCategorySubject) Get() *CategorySubject {
	return v.value
}

func (v *NullableCategorySubject) Set(val *CategorySubject) {
	v.value = val
	v.isSet = true
}

func (v NullableCategorySubject) IsSet() bool {
	return v.isSet
}

func (v *NullableCategorySubject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategorySubject(val *CategorySubject) *NullableCategorySubject {
	return &NullableCategorySubject{value: val, isSet: true}
}

func (v NullableCategorySubject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategorySubject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


