/*
mpstats

MPStats API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SearchItems struct for SearchItems
type SearchItems struct {
	// Кол-во строк в результирующем запросе без учета пагинации
	Total int32 `json:"total"`
	// Ошибка
	Error bool `json:"error"`
	// Номер строки начала получения данных
	StartRow int32 `json:"startRow"`
	// Номер строки конца получения данных
	EndRow int32 `json:"endRow"`
	RowGroupCols []int32 `json:"rowGroupCols"`
	ValueCols []int32 `json:"valueCols"`
	PivotCols []int32 `json:"pivotCols"`
	PivotMode bool `json:"pivotMode"`
	GroupKeys []int32 `json:"groupKeys"`
	// 
	FilterModel interface{} `json:"filterModel"`
	SortModel []SortModelItem `json:"sortModel"`
	// tpl
	Tpl string `json:"tpl"`
	// Массив данных
	Data []SearchItemsElement `json:"data"`
}

// NewSearchItems instantiates a new SearchItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchItems(total int32, error_ bool, startRow int32, endRow int32, rowGroupCols []int32, valueCols []int32, pivotCols []int32, pivotMode bool, groupKeys []int32, filterModel interface{}, sortModel []SortModelItem, tpl string, data []SearchItemsElement) *SearchItems {
	this := SearchItems{}
	this.Total = total
	this.Error = error_
	this.StartRow = startRow
	this.EndRow = endRow
	this.RowGroupCols = rowGroupCols
	this.ValueCols = valueCols
	this.PivotCols = pivotCols
	this.PivotMode = pivotMode
	this.GroupKeys = groupKeys
	this.FilterModel = filterModel
	this.SortModel = sortModel
	this.Tpl = tpl
	this.Data = data
	return &this
}

// NewSearchItemsWithDefaults instantiates a new SearchItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchItemsWithDefaults() *SearchItems {
	this := SearchItems{}
	return &this
}

// GetTotal returns the Total field value
func (o *SearchItems) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *SearchItems) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *SearchItems) SetTotal(v int32) {
	o.Total = v
}

// GetError returns the Error field value
func (o *SearchItems) GetError() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *SearchItems) GetErrorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *SearchItems) SetError(v bool) {
	o.Error = v
}

// GetStartRow returns the StartRow field value
func (o *SearchItems) GetStartRow() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StartRow
}

// GetStartRowOk returns a tuple with the StartRow field value
// and a boolean to check if the value has been set.
func (o *SearchItems) GetStartRowOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartRow, true
}

// SetStartRow sets field value
func (o *SearchItems) SetStartRow(v int32) {
	o.StartRow = v
}

// GetEndRow returns the EndRow field value
func (o *SearchItems) GetEndRow() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EndRow
}

// GetEndRowOk returns a tuple with the EndRow field value
// and a boolean to check if the value has been set.
func (o *SearchItems) GetEndRowOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndRow, true
}

// SetEndRow sets field value
func (o *SearchItems) SetEndRow(v int32) {
	o.EndRow = v
}

// GetRowGroupCols returns the RowGroupCols field value
func (o *SearchItems) GetRowGroupCols() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.RowGroupCols
}

// GetRowGroupColsOk returns a tuple with the RowGroupCols field value
// and a boolean to check if the value has been set.
func (o *SearchItems) GetRowGroupColsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RowGroupCols, true
}

// SetRowGroupCols sets field value
func (o *SearchItems) SetRowGroupCols(v []int32) {
	o.RowGroupCols = v
}

// GetValueCols returns the ValueCols field value
func (o *SearchItems) GetValueCols() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.ValueCols
}

// GetValueColsOk returns a tuple with the ValueCols field value
// and a boolean to check if the value has been set.
func (o *SearchItems) GetValueColsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValueCols, true
}

// SetValueCols sets field value
func (o *SearchItems) SetValueCols(v []int32) {
	o.ValueCols = v
}

// GetPivotCols returns the PivotCols field value
func (o *SearchItems) GetPivotCols() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.PivotCols
}

// GetPivotColsOk returns a tuple with the PivotCols field value
// and a boolean to check if the value has been set.
func (o *SearchItems) GetPivotColsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PivotCols, true
}

// SetPivotCols sets field value
func (o *SearchItems) SetPivotCols(v []int32) {
	o.PivotCols = v
}

// GetPivotMode returns the PivotMode field value
func (o *SearchItems) GetPivotMode() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PivotMode
}

// GetPivotModeOk returns a tuple with the PivotMode field value
// and a boolean to check if the value has been set.
func (o *SearchItems) GetPivotModeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PivotMode, true
}

// SetPivotMode sets field value
func (o *SearchItems) SetPivotMode(v bool) {
	o.PivotMode = v
}

// GetGroupKeys returns the GroupKeys field value
func (o *SearchItems) GetGroupKeys() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.GroupKeys
}

// GetGroupKeysOk returns a tuple with the GroupKeys field value
// and a boolean to check if the value has been set.
func (o *SearchItems) GetGroupKeysOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupKeys, true
}

// SetGroupKeys sets field value
func (o *SearchItems) SetGroupKeys(v []int32) {
	o.GroupKeys = v
}

// GetFilterModel returns the FilterModel field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SearchItems) GetFilterModel() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.FilterModel
}

// GetFilterModelOk returns a tuple with the FilterModel field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchItems) GetFilterModelOk() (*interface{}, bool) {
	if o == nil || o.FilterModel == nil {
		return nil, false
	}
	return &o.FilterModel, true
}

// SetFilterModel sets field value
func (o *SearchItems) SetFilterModel(v interface{}) {
	o.FilterModel = v
}

// GetSortModel returns the SortModel field value
func (o *SearchItems) GetSortModel() []SortModelItem {
	if o == nil {
		var ret []SortModelItem
		return ret
	}

	return o.SortModel
}

// GetSortModelOk returns a tuple with the SortModel field value
// and a boolean to check if the value has been set.
func (o *SearchItems) GetSortModelOk() ([]SortModelItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.SortModel, true
}

// SetSortModel sets field value
func (o *SearchItems) SetSortModel(v []SortModelItem) {
	o.SortModel = v
}

// GetTpl returns the Tpl field value
func (o *SearchItems) GetTpl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tpl
}

// GetTplOk returns a tuple with the Tpl field value
// and a boolean to check if the value has been set.
func (o *SearchItems) GetTplOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tpl, true
}

// SetTpl sets field value
func (o *SearchItems) SetTpl(v string) {
	o.Tpl = v
}

// GetData returns the Data field value
func (o *SearchItems) GetData() []SearchItemsElement {
	if o == nil {
		var ret []SearchItemsElement
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *SearchItems) GetDataOk() ([]SearchItemsElement, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *SearchItems) SetData(v []SearchItemsElement) {
	o.Data = v
}

func (o SearchItems) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["error"] = o.Error
	}
	if true {
		toSerialize["startRow"] = o.StartRow
	}
	if true {
		toSerialize["endRow"] = o.EndRow
	}
	if true {
		toSerialize["rowGroupCols"] = o.RowGroupCols
	}
	if true {
		toSerialize["valueCols"] = o.ValueCols
	}
	if true {
		toSerialize["pivotCols"] = o.PivotCols
	}
	if true {
		toSerialize["pivotMode"] = o.PivotMode
	}
	if true {
		toSerialize["groupKeys"] = o.GroupKeys
	}
	if o.FilterModel != nil {
		toSerialize["filterModel"] = o.FilterModel
	}
	if true {
		toSerialize["sortModel"] = o.SortModel
	}
	if true {
		toSerialize["tpl"] = o.Tpl
	}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableSearchItems struct {
	value *SearchItems
	isSet bool
}

func (v NullableSearchItems) Get() *SearchItems {
	return v.value
}

func (v *NullableSearchItems) Set(val *SearchItems) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchItems) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchItems(val *SearchItems) *NullableSearchItems {
	return &NullableSearchItems{value: val, isSet: true}
}

func (v NullableSearchItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


