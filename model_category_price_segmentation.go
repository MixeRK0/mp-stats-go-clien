/*
mpstats

MPStats API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CategoryPriceSegmentation 
type CategoryPriceSegmentation struct {
	// Диапазон цен
	Range string `json:"range"`
	// Число товаров в диапазоне
	Items float32 `json:"items"`
	// Число товаров с продажами в диапазоне
	ItemsWithSells float32 `json:"items_with_sells"`
	// Число брендов в диапазоне
	Brands float32 `json:"brands"`
	// Число брендов в диапазоне с продажами больше 0
	BrandsWithSells float32 `json:"brands_with_sells"`
	// Число продавцов в диапазоне
	Sellers float32 `json:"sellers"`
	// Число продавцов в диапазоне продажами больше 0
	SellersWithSells float32 `json:"sellers_with_sells"`
	// Суммарная выручка в диапазоне
	Revenue float32 `json:"revenue"`
	// Число продаж
	Sales float32 `json:"sales"`
	// Сумма выручки диапазона, разделенная на число товаров в нем
	ProductRevenue float32 `json:"product_revenue"`
	// Цена в диапазоне от
	MinRangePrice float32 `json:"min_range_price"`
	// Цена в диапазоне до
	MaxRangePrice float32 `json:"max_range_price"`
	// Упущенная выручка
	LostProfit float32 `json:"lost_profit"`
	// Процент упущенной выручка
	LostProfitPercent float32 `json:"lost_profit_percent"`
}

// NewCategoryPriceSegmentation instantiates a new CategoryPriceSegmentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryPriceSegmentation(range_ string, items float32, itemsWithSells float32, brands float32, brandsWithSells float32, sellers float32, sellersWithSells float32, revenue float32, sales float32, productRevenue float32, minRangePrice float32, maxRangePrice float32, lostProfit float32, lostProfitPercent float32) *CategoryPriceSegmentation {
	this := CategoryPriceSegmentation{}
	this.Range = range_
	this.Items = items
	this.ItemsWithSells = itemsWithSells
	this.Brands = brands
	this.BrandsWithSells = brandsWithSells
	this.Sellers = sellers
	this.SellersWithSells = sellersWithSells
	this.Revenue = revenue
	this.Sales = sales
	this.ProductRevenue = productRevenue
	this.MinRangePrice = minRangePrice
	this.MaxRangePrice = maxRangePrice
	this.LostProfit = lostProfit
	this.LostProfitPercent = lostProfitPercent
	return &this
}

// NewCategoryPriceSegmentationWithDefaults instantiates a new CategoryPriceSegmentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryPriceSegmentationWithDefaults() *CategoryPriceSegmentation {
	this := CategoryPriceSegmentation{}
	return &this
}

// GetRange returns the Range field value
func (o *CategoryPriceSegmentation) GetRange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Range
}

// GetRangeOk returns a tuple with the Range field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetRangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Range, true
}

// SetRange sets field value
func (o *CategoryPriceSegmentation) SetRange(v string) {
	o.Range = v
}

// GetItems returns the Items field value
func (o *CategoryPriceSegmentation) GetItems() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetItemsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Items, true
}

// SetItems sets field value
func (o *CategoryPriceSegmentation) SetItems(v float32) {
	o.Items = v
}

// GetItemsWithSells returns the ItemsWithSells field value
func (o *CategoryPriceSegmentation) GetItemsWithSells() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ItemsWithSells
}

// GetItemsWithSellsOk returns a tuple with the ItemsWithSells field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetItemsWithSellsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemsWithSells, true
}

// SetItemsWithSells sets field value
func (o *CategoryPriceSegmentation) SetItemsWithSells(v float32) {
	o.ItemsWithSells = v
}

// GetBrands returns the Brands field value
func (o *CategoryPriceSegmentation) GetBrands() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Brands
}

// GetBrandsOk returns a tuple with the Brands field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetBrandsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Brands, true
}

// SetBrands sets field value
func (o *CategoryPriceSegmentation) SetBrands(v float32) {
	o.Brands = v
}

// GetBrandsWithSells returns the BrandsWithSells field value
func (o *CategoryPriceSegmentation) GetBrandsWithSells() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BrandsWithSells
}

// GetBrandsWithSellsOk returns a tuple with the BrandsWithSells field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetBrandsWithSellsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BrandsWithSells, true
}

// SetBrandsWithSells sets field value
func (o *CategoryPriceSegmentation) SetBrandsWithSells(v float32) {
	o.BrandsWithSells = v
}

// GetSellers returns the Sellers field value
func (o *CategoryPriceSegmentation) GetSellers() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Sellers
}

// GetSellersOk returns a tuple with the Sellers field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetSellersOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sellers, true
}

// SetSellers sets field value
func (o *CategoryPriceSegmentation) SetSellers(v float32) {
	o.Sellers = v
}

// GetSellersWithSells returns the SellersWithSells field value
func (o *CategoryPriceSegmentation) GetSellersWithSells() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SellersWithSells
}

// GetSellersWithSellsOk returns a tuple with the SellersWithSells field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetSellersWithSellsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SellersWithSells, true
}

// SetSellersWithSells sets field value
func (o *CategoryPriceSegmentation) SetSellersWithSells(v float32) {
	o.SellersWithSells = v
}

// GetRevenue returns the Revenue field value
func (o *CategoryPriceSegmentation) GetRevenue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetRevenueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revenue, true
}

// SetRevenue sets field value
func (o *CategoryPriceSegmentation) SetRevenue(v float32) {
	o.Revenue = v
}

// GetSales returns the Sales field value
func (o *CategoryPriceSegmentation) GetSales() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Sales
}

// GetSalesOk returns a tuple with the Sales field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetSalesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sales, true
}

// SetSales sets field value
func (o *CategoryPriceSegmentation) SetSales(v float32) {
	o.Sales = v
}

// GetProductRevenue returns the ProductRevenue field value
func (o *CategoryPriceSegmentation) GetProductRevenue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ProductRevenue
}

// GetProductRevenueOk returns a tuple with the ProductRevenue field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetProductRevenueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductRevenue, true
}

// SetProductRevenue sets field value
func (o *CategoryPriceSegmentation) SetProductRevenue(v float32) {
	o.ProductRevenue = v
}

// GetMinRangePrice returns the MinRangePrice field value
func (o *CategoryPriceSegmentation) GetMinRangePrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MinRangePrice
}

// GetMinRangePriceOk returns a tuple with the MinRangePrice field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetMinRangePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinRangePrice, true
}

// SetMinRangePrice sets field value
func (o *CategoryPriceSegmentation) SetMinRangePrice(v float32) {
	o.MinRangePrice = v
}

// GetMaxRangePrice returns the MaxRangePrice field value
func (o *CategoryPriceSegmentation) GetMaxRangePrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MaxRangePrice
}

// GetMaxRangePriceOk returns a tuple with the MaxRangePrice field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetMaxRangePriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxRangePrice, true
}

// SetMaxRangePrice sets field value
func (o *CategoryPriceSegmentation) SetMaxRangePrice(v float32) {
	o.MaxRangePrice = v
}

// GetLostProfit returns the LostProfit field value
func (o *CategoryPriceSegmentation) GetLostProfit() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LostProfit
}

// GetLostProfitOk returns a tuple with the LostProfit field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetLostProfitOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LostProfit, true
}

// SetLostProfit sets field value
func (o *CategoryPriceSegmentation) SetLostProfit(v float32) {
	o.LostProfit = v
}

// GetLostProfitPercent returns the LostProfitPercent field value
func (o *CategoryPriceSegmentation) GetLostProfitPercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LostProfitPercent
}

// GetLostProfitPercentOk returns a tuple with the LostProfitPercent field value
// and a boolean to check if the value has been set.
func (o *CategoryPriceSegmentation) GetLostProfitPercentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LostProfitPercent, true
}

// SetLostProfitPercent sets field value
func (o *CategoryPriceSegmentation) SetLostProfitPercent(v float32) {
	o.LostProfitPercent = v
}

func (o CategoryPriceSegmentation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["range"] = o.Range
	}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["items_with_sells"] = o.ItemsWithSells
	}
	if true {
		toSerialize["brands"] = o.Brands
	}
	if true {
		toSerialize["brands_with_sells"] = o.BrandsWithSells
	}
	if true {
		toSerialize["sellers"] = o.Sellers
	}
	if true {
		toSerialize["sellers_with_sells"] = o.SellersWithSells
	}
	if true {
		toSerialize["revenue"] = o.Revenue
	}
	if true {
		toSerialize["sales"] = o.Sales
	}
	if true {
		toSerialize["product_revenue"] = o.ProductRevenue
	}
	if true {
		toSerialize["min_range_price"] = o.MinRangePrice
	}
	if true {
		toSerialize["max_range_price"] = o.MaxRangePrice
	}
	if true {
		toSerialize["lost_profit"] = o.LostProfit
	}
	if true {
		toSerialize["lost_profit_percent"] = o.LostProfitPercent
	}
	return json.Marshal(toSerialize)
}

type NullableCategoryPriceSegmentation struct {
	value *CategoryPriceSegmentation
	isSet bool
}

func (v NullableCategoryPriceSegmentation) Get() *CategoryPriceSegmentation {
	return v.value
}

func (v *NullableCategoryPriceSegmentation) Set(val *CategoryPriceSegmentation) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryPriceSegmentation) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryPriceSegmentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryPriceSegmentation(val *CategoryPriceSegmentation) *NullableCategoryPriceSegmentation {
	return &NullableCategoryPriceSegmentation{value: val, isSet: true}
}

func (v NullableCategoryPriceSegmentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryPriceSegmentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


