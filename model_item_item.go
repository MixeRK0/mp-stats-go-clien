/*
mpstats

MPStats API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ItemItem struct for ItemItem
type ItemItem struct {
	// Идентификатор товара (SKU)
	Id string `json:"id"`
	// Название
	Name string `json:"name"`
	// Полное название
	FullName string `json:"full_name"`
	// Ссылка на площадке
	Link string `json:"link"`
	// Бренд
	Brand string `json:"brand"`
	// Продавец
	Seller string `json:"seller"`
	// Рейтинг
	Rating float32 `json:"rating"`
	// Комментариев
	Comments float32 `json:"comments"`
	// Цена
	Price float32 `json:"price"`
	// Цена с учетом скидки
	FinalPrice float32 `json:"final_price"`
	// Скидка
	Discount float32 `json:"discount"`
	// Обновлено
	Updated string `json:"updated"`
	// Новинка
	IsNew float32 `json:"is_new"`
}

// NewItemItem instantiates a new ItemItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemItem(id string, name string, fullName string, link string, brand string, seller string, rating float32, comments float32, price float32, finalPrice float32, discount float32, updated string, isNew float32) *ItemItem {
	this := ItemItem{}
	this.Id = id
	this.Name = name
	this.FullName = fullName
	this.Link = link
	this.Brand = brand
	this.Seller = seller
	this.Rating = rating
	this.Comments = comments
	this.Price = price
	this.FinalPrice = finalPrice
	this.Discount = discount
	this.Updated = updated
	this.IsNew = isNew
	return &this
}

// NewItemItemWithDefaults instantiates a new ItemItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemItemWithDefaults() *ItemItem {
	this := ItemItem{}
	return &this
}

// GetId returns the Id field value
func (o *ItemItem) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ItemItem) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ItemItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ItemItem) SetName(v string) {
	o.Name = v
}

// GetFullName returns the FullName field value
func (o *ItemItem) GetFullName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullName, true
}

// SetFullName sets field value
func (o *ItemItem) SetFullName(v string) {
	o.FullName = v
}

// GetLink returns the Link field value
func (o *ItemItem) GetLink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Link
}

// GetLinkOk returns a tuple with the Link field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Link, true
}

// SetLink sets field value
func (o *ItemItem) SetLink(v string) {
	o.Link = v
}

// GetBrand returns the Brand field value
func (o *ItemItem) GetBrand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Brand
}

// GetBrandOk returns a tuple with the Brand field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetBrandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Brand, true
}

// SetBrand sets field value
func (o *ItemItem) SetBrand(v string) {
	o.Brand = v
}

// GetSeller returns the Seller field value
func (o *ItemItem) GetSeller() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Seller
}

// GetSellerOk returns a tuple with the Seller field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetSellerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Seller, true
}

// SetSeller sets field value
func (o *ItemItem) SetSeller(v string) {
	o.Seller = v
}

// GetRating returns the Rating field value
func (o *ItemItem) GetRating() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Rating
}

// GetRatingOk returns a tuple with the Rating field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rating, true
}

// SetRating sets field value
func (o *ItemItem) SetRating(v float32) {
	o.Rating = v
}

// GetComments returns the Comments field value
func (o *ItemItem) GetComments() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetCommentsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comments, true
}

// SetComments sets field value
func (o *ItemItem) SetComments(v float32) {
	o.Comments = v
}

// GetPrice returns the Price field value
func (o *ItemItem) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *ItemItem) SetPrice(v float32) {
	o.Price = v
}

// GetFinalPrice returns the FinalPrice field value
func (o *ItemItem) GetFinalPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FinalPrice
}

// GetFinalPriceOk returns a tuple with the FinalPrice field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetFinalPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinalPrice, true
}

// SetFinalPrice sets field value
func (o *ItemItem) SetFinalPrice(v float32) {
	o.FinalPrice = v
}

// GetDiscount returns the Discount field value
func (o *ItemItem) GetDiscount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetDiscountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Discount, true
}

// SetDiscount sets field value
func (o *ItemItem) SetDiscount(v float32) {
	o.Discount = v
}

// GetUpdated returns the Updated field value
func (o *ItemItem) GetUpdated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetUpdatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *ItemItem) SetUpdated(v string) {
	o.Updated = v
}

// GetIsNew returns the IsNew field value
func (o *ItemItem) GetIsNew() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.IsNew
}

// GetIsNewOk returns a tuple with the IsNew field value
// and a boolean to check if the value has been set.
func (o *ItemItem) GetIsNewOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsNew, true
}

// SetIsNew sets field value
func (o *ItemItem) SetIsNew(v float32) {
	o.IsNew = v
}

func (o ItemItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["full_name"] = o.FullName
	}
	if true {
		toSerialize["link"] = o.Link
	}
	if true {
		toSerialize["brand"] = o.Brand
	}
	if true {
		toSerialize["seller"] = o.Seller
	}
	if true {
		toSerialize["rating"] = o.Rating
	}
	if true {
		toSerialize["comments"] = o.Comments
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if true {
		toSerialize["final_price"] = o.FinalPrice
	}
	if true {
		toSerialize["discount"] = o.Discount
	}
	if true {
		toSerialize["updated"] = o.Updated
	}
	if true {
		toSerialize["is_new"] = o.IsNew
	}
	return json.Marshal(toSerialize)
}

type NullableItemItem struct {
	value *ItemItem
	isSet bool
}

func (v NullableItemItem) Get() *ItemItem {
	return v.value
}

func (v *NullableItemItem) Set(val *ItemItem) {
	v.value = val
	v.isSet = true
}

func (v NullableItemItem) IsSet() bool {
	return v.isSet
}

func (v *NullableItemItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemItem(val *ItemItem) *NullableItemItem {
	return &NullableItemItem{value: val, isSet: true}
}

func (v NullableItemItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


