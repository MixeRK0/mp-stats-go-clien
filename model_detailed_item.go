/*
mpstats

MPStats API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DetailedItem 
type DetailedItem struct {
	// Идентификатор товарной позиции
	Id float32 `json:"id"`
	// Название товара
	Name string `json:"name"`
	// Название бренда
	Brand string `json:"brand"`
	// Название продавца
	Seller string `json:"seller"`
	// Категория товара
	Category string `json:"category"`
	// Цвет товара
	Color string `json:"color"`
	// Последний зафиксированный остаток на складе
	Balance float32 `json:"balance"`
	// Рейтинг товара
	Rating float32 `json:"rating"`
	// Количество комментариев
	Comments float32 `json:"comments"`
	// Последняя зафиксированная цена
	FinalPrice float32 `json:"final_price"`
	// Максимальная цена за период
	FinalPriceMax float32 `json:"final_price_max"`
	// Минимальная цена за период
	FinalPriceMin float32 `json:"final_price_min"`
	// Средняя цена за период (выручка / число продаж)
	FinalPriceAverage float32 `json:"final_price_average"`
	// Размер скидки
	BasicSale float32 `json:"basic_sale"`
	// Цена после применения скидки
	BasicPrice float32 `json:"basic_price"`
	// Размер скидки по промокоду
	PromoSale float32 `json:"promo_sale"`
	// Размер Скидки Постоянного Покупателя
	ClientSale float32 `json:"client_sale"`
	// Итоговая цена для посетителя, с учетом СПП
	ClientPrice float32 `json:"client_price"`
	// Цена без учета скидок
	StartPrice float32 `json:"start_price"`
	// Количество проданных единиц товара за период
	Sales float32 `json:"sales"`
	// Выручка за период
	Revenue float32 `json:"revenue"`
	// Потенциал выручки (выручка / число дней в наличии) * дней в отчете
	RevenuePotential float32 `json:"revenue_potential"`
	// Упущенная выручка (Потенциал - Выручка)
	LostProfit float32 `json:"lost_profit"`
	// Количество дней, когда товар был в наличии на конец дня
	DaysInStock float32 `json:"days_in_stock"`
	// Количество дней, когда были продажи
	DaysWithSales float32 `json:"days_with_sales"`
	// Среднее число продаж, при наличии товара на конец дня
	AverageIfInStock float32 `json:"average_if_in_stock"`
	// Изображение товара
	Thumb string `json:"thumb"`
	// График продаж
	Graph []float32 `json:"graph"`
}

// NewDetailedItem instantiates a new DetailedItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetailedItem(id float32, name string, brand string, seller string, category string, color string, balance float32, rating float32, comments float32, finalPrice float32, finalPriceMax float32, finalPriceMin float32, finalPriceAverage float32, basicSale float32, basicPrice float32, promoSale float32, clientSale float32, clientPrice float32, startPrice float32, sales float32, revenue float32, revenuePotential float32, lostProfit float32, daysInStock float32, daysWithSales float32, averageIfInStock float32, thumb string, graph []float32) *DetailedItem {
	this := DetailedItem{}
	this.Id = id
	this.Name = name
	this.Brand = brand
	this.Seller = seller
	this.Category = category
	this.Color = color
	this.Balance = balance
	this.Rating = rating
	this.Comments = comments
	this.FinalPrice = finalPrice
	this.FinalPriceMax = finalPriceMax
	this.FinalPriceMin = finalPriceMin
	this.FinalPriceAverage = finalPriceAverage
	this.BasicSale = basicSale
	this.BasicPrice = basicPrice
	this.PromoSale = promoSale
	this.ClientSale = clientSale
	this.ClientPrice = clientPrice
	this.StartPrice = startPrice
	this.Sales = sales
	this.Revenue = revenue
	this.RevenuePotential = revenuePotential
	this.LostProfit = lostProfit
	this.DaysInStock = daysInStock
	this.DaysWithSales = daysWithSales
	this.AverageIfInStock = averageIfInStock
	this.Thumb = thumb
	this.Graph = graph
	return &this
}

// NewDetailedItemWithDefaults instantiates a new DetailedItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetailedItemWithDefaults() *DetailedItem {
	this := DetailedItem{}
	return &this
}

// GetId returns the Id field value
func (o *DetailedItem) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DetailedItem) SetId(v float32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *DetailedItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DetailedItem) SetName(v string) {
	o.Name = v
}

// GetBrand returns the Brand field value
func (o *DetailedItem) GetBrand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Brand
}

// GetBrandOk returns a tuple with the Brand field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetBrandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Brand, true
}

// SetBrand sets field value
func (o *DetailedItem) SetBrand(v string) {
	o.Brand = v
}

// GetSeller returns the Seller field value
func (o *DetailedItem) GetSeller() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Seller
}

// GetSellerOk returns a tuple with the Seller field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetSellerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Seller, true
}

// SetSeller sets field value
func (o *DetailedItem) SetSeller(v string) {
	o.Seller = v
}

// GetCategory returns the Category field value
func (o *DetailedItem) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *DetailedItem) SetCategory(v string) {
	o.Category = v
}

// GetColor returns the Color field value
func (o *DetailedItem) GetColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Color
}

// GetColorOk returns a tuple with the Color field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Color, true
}

// SetColor sets field value
func (o *DetailedItem) SetColor(v string) {
	o.Color = v
}

// GetBalance returns the Balance field value
func (o *DetailedItem) GetBalance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetBalanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *DetailedItem) SetBalance(v float32) {
	o.Balance = v
}

// GetRating returns the Rating field value
func (o *DetailedItem) GetRating() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Rating
}

// GetRatingOk returns a tuple with the Rating field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rating, true
}

// SetRating sets field value
func (o *DetailedItem) SetRating(v float32) {
	o.Rating = v
}

// GetComments returns the Comments field value
func (o *DetailedItem) GetComments() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetCommentsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comments, true
}

// SetComments sets field value
func (o *DetailedItem) SetComments(v float32) {
	o.Comments = v
}

// GetFinalPrice returns the FinalPrice field value
func (o *DetailedItem) GetFinalPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FinalPrice
}

// GetFinalPriceOk returns a tuple with the FinalPrice field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetFinalPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinalPrice, true
}

// SetFinalPrice sets field value
func (o *DetailedItem) SetFinalPrice(v float32) {
	o.FinalPrice = v
}

// GetFinalPriceMax returns the FinalPriceMax field value
func (o *DetailedItem) GetFinalPriceMax() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FinalPriceMax
}

// GetFinalPriceMaxOk returns a tuple with the FinalPriceMax field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetFinalPriceMaxOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinalPriceMax, true
}

// SetFinalPriceMax sets field value
func (o *DetailedItem) SetFinalPriceMax(v float32) {
	o.FinalPriceMax = v
}

// GetFinalPriceMin returns the FinalPriceMin field value
func (o *DetailedItem) GetFinalPriceMin() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FinalPriceMin
}

// GetFinalPriceMinOk returns a tuple with the FinalPriceMin field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetFinalPriceMinOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinalPriceMin, true
}

// SetFinalPriceMin sets field value
func (o *DetailedItem) SetFinalPriceMin(v float32) {
	o.FinalPriceMin = v
}

// GetFinalPriceAverage returns the FinalPriceAverage field value
func (o *DetailedItem) GetFinalPriceAverage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FinalPriceAverage
}

// GetFinalPriceAverageOk returns a tuple with the FinalPriceAverage field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetFinalPriceAverageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinalPriceAverage, true
}

// SetFinalPriceAverage sets field value
func (o *DetailedItem) SetFinalPriceAverage(v float32) {
	o.FinalPriceAverage = v
}

// GetBasicSale returns the BasicSale field value
func (o *DetailedItem) GetBasicSale() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BasicSale
}

// GetBasicSaleOk returns a tuple with the BasicSale field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetBasicSaleOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BasicSale, true
}

// SetBasicSale sets field value
func (o *DetailedItem) SetBasicSale(v float32) {
	o.BasicSale = v
}

// GetBasicPrice returns the BasicPrice field value
func (o *DetailedItem) GetBasicPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BasicPrice
}

// GetBasicPriceOk returns a tuple with the BasicPrice field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetBasicPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BasicPrice, true
}

// SetBasicPrice sets field value
func (o *DetailedItem) SetBasicPrice(v float32) {
	o.BasicPrice = v
}

// GetPromoSale returns the PromoSale field value
func (o *DetailedItem) GetPromoSale() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PromoSale
}

// GetPromoSaleOk returns a tuple with the PromoSale field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetPromoSaleOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PromoSale, true
}

// SetPromoSale sets field value
func (o *DetailedItem) SetPromoSale(v float32) {
	o.PromoSale = v
}

// GetClientSale returns the ClientSale field value
func (o *DetailedItem) GetClientSale() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ClientSale
}

// GetClientSaleOk returns a tuple with the ClientSale field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetClientSaleOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSale, true
}

// SetClientSale sets field value
func (o *DetailedItem) SetClientSale(v float32) {
	o.ClientSale = v
}

// GetClientPrice returns the ClientPrice field value
func (o *DetailedItem) GetClientPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ClientPrice
}

// GetClientPriceOk returns a tuple with the ClientPrice field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetClientPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientPrice, true
}

// SetClientPrice sets field value
func (o *DetailedItem) SetClientPrice(v float32) {
	o.ClientPrice = v
}

// GetStartPrice returns the StartPrice field value
func (o *DetailedItem) GetStartPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.StartPrice
}

// GetStartPriceOk returns a tuple with the StartPrice field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetStartPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartPrice, true
}

// SetStartPrice sets field value
func (o *DetailedItem) SetStartPrice(v float32) {
	o.StartPrice = v
}

// GetSales returns the Sales field value
func (o *DetailedItem) GetSales() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Sales
}

// GetSalesOk returns a tuple with the Sales field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetSalesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sales, true
}

// SetSales sets field value
func (o *DetailedItem) SetSales(v float32) {
	o.Sales = v
}

// GetRevenue returns the Revenue field value
func (o *DetailedItem) GetRevenue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetRevenueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revenue, true
}

// SetRevenue sets field value
func (o *DetailedItem) SetRevenue(v float32) {
	o.Revenue = v
}

// GetRevenuePotential returns the RevenuePotential field value
func (o *DetailedItem) GetRevenuePotential() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RevenuePotential
}

// GetRevenuePotentialOk returns a tuple with the RevenuePotential field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetRevenuePotentialOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevenuePotential, true
}

// SetRevenuePotential sets field value
func (o *DetailedItem) SetRevenuePotential(v float32) {
	o.RevenuePotential = v
}

// GetLostProfit returns the LostProfit field value
func (o *DetailedItem) GetLostProfit() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LostProfit
}

// GetLostProfitOk returns a tuple with the LostProfit field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetLostProfitOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LostProfit, true
}

// SetLostProfit sets field value
func (o *DetailedItem) SetLostProfit(v float32) {
	o.LostProfit = v
}

// GetDaysInStock returns the DaysInStock field value
func (o *DetailedItem) GetDaysInStock() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DaysInStock
}

// GetDaysInStockOk returns a tuple with the DaysInStock field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetDaysInStockOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DaysInStock, true
}

// SetDaysInStock sets field value
func (o *DetailedItem) SetDaysInStock(v float32) {
	o.DaysInStock = v
}

// GetDaysWithSales returns the DaysWithSales field value
func (o *DetailedItem) GetDaysWithSales() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DaysWithSales
}

// GetDaysWithSalesOk returns a tuple with the DaysWithSales field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetDaysWithSalesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DaysWithSales, true
}

// SetDaysWithSales sets field value
func (o *DetailedItem) SetDaysWithSales(v float32) {
	o.DaysWithSales = v
}

// GetAverageIfInStock returns the AverageIfInStock field value
func (o *DetailedItem) GetAverageIfInStock() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AverageIfInStock
}

// GetAverageIfInStockOk returns a tuple with the AverageIfInStock field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetAverageIfInStockOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AverageIfInStock, true
}

// SetAverageIfInStock sets field value
func (o *DetailedItem) SetAverageIfInStock(v float32) {
	o.AverageIfInStock = v
}

// GetThumb returns the Thumb field value
func (o *DetailedItem) GetThumb() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Thumb
}

// GetThumbOk returns a tuple with the Thumb field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetThumbOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Thumb, true
}

// SetThumb sets field value
func (o *DetailedItem) SetThumb(v string) {
	o.Thumb = v
}

// GetGraph returns the Graph field value
func (o *DetailedItem) GetGraph() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.Graph
}

// GetGraphOk returns a tuple with the Graph field value
// and a boolean to check if the value has been set.
func (o *DetailedItem) GetGraphOk() ([]float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Graph, true
}

// SetGraph sets field value
func (o *DetailedItem) SetGraph(v []float32) {
	o.Graph = v
}

func (o DetailedItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["brand"] = o.Brand
	}
	if true {
		toSerialize["seller"] = o.Seller
	}
	if true {
		toSerialize["category"] = o.Category
	}
	if true {
		toSerialize["color"] = o.Color
	}
	if true {
		toSerialize["balance"] = o.Balance
	}
	if true {
		toSerialize["rating"] = o.Rating
	}
	if true {
		toSerialize["comments"] = o.Comments
	}
	if true {
		toSerialize["final_price"] = o.FinalPrice
	}
	if true {
		toSerialize["final_price_max"] = o.FinalPriceMax
	}
	if true {
		toSerialize["final_price_min"] = o.FinalPriceMin
	}
	if true {
		toSerialize["final_price_average"] = o.FinalPriceAverage
	}
	if true {
		toSerialize["basic_sale"] = o.BasicSale
	}
	if true {
		toSerialize["basic_price"] = o.BasicPrice
	}
	if true {
		toSerialize["promo_sale"] = o.PromoSale
	}
	if true {
		toSerialize["client_sale"] = o.ClientSale
	}
	if true {
		toSerialize["client_price"] = o.ClientPrice
	}
	if true {
		toSerialize["start_price"] = o.StartPrice
	}
	if true {
		toSerialize["sales"] = o.Sales
	}
	if true {
		toSerialize["revenue"] = o.Revenue
	}
	if true {
		toSerialize["revenue_potential"] = o.RevenuePotential
	}
	if true {
		toSerialize["lost_profit"] = o.LostProfit
	}
	if true {
		toSerialize["days_in_stock"] = o.DaysInStock
	}
	if true {
		toSerialize["days_with_sales"] = o.DaysWithSales
	}
	if true {
		toSerialize["average_if_in_stock"] = o.AverageIfInStock
	}
	if true {
		toSerialize["thumb"] = o.Thumb
	}
	if true {
		toSerialize["graph"] = o.Graph
	}
	return json.Marshal(toSerialize)
}

type NullableDetailedItem struct {
	value *DetailedItem
	isSet bool
}

func (v NullableDetailedItem) Get() *DetailedItem {
	return v.value
}

func (v *NullableDetailedItem) Set(val *DetailedItem) {
	v.value = val
	v.isSet = true
}

func (v NullableDetailedItem) IsSet() bool {
	return v.isSet
}

func (v *NullableDetailedItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetailedItem(val *DetailedItem) *NullableDetailedItem {
	return &NullableDetailedItem{value: val, isSet: true}
}

func (v NullableDetailedItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetailedItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


